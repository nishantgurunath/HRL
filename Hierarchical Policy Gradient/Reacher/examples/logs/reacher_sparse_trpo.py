import numpy as np
import matplotlib.pyplot as plt
import pandas as pd


R_hier_sparse_trpo = [-40.95,
-38.50,
-34.52,
-34.15,
-36.04,
-32.82,
-28.08,
-32.03,
-32.16,
-28.53,
-25.88,
-25.96,
-25.80,
-22.01,
-30.61,
-31.04,
-28.56,
-29.05,
-28.35,
-30.11,
-27.91,
-26.04,
-26.88,
-25.66,
-26.30,
-27.25,
-28.52,
-28.67,
-28.26,
-28.84,
-27.89,
-28.40,
-27.49,
-28.95,
-31.34,
-28.30,
-23.61,
-20.90,
-22.47,
-23.47,
-22.16,
-23.28,
-26.15,
-22.06,
-23.67,
-20.52,
-23.44,
-23.08,
-23.23,
-25.00]




#R_hier_dense_trpo = [-22.24,
#-14.78,
#-12.58,
#-12.12,
#-11.87,
#-12.76,
#-12.18,
#-12.08,
#-10.86,
#-10.72,
#-9.83,
#-9.18,
#-8.69,
#-9.10,
#-9.07,
#-8.62,
#-9.13,
#-8.45,
#-8.65,
#-8.01,
#-8.41,
#-8.47,
#-8.47,
#-8.37,
#-8.25,
#-8.57,
#-8.31,
#-8.87,
#-9.52,
#-9.42,
#-9.61,
#-9.94,
#-9.78,
#-10.09,
#-10.48,
#-10.16,
#-10.27,
#-10.08,
#-9.55,
#-9.93,
#-9.19,
#-9.85,
#-10.05,
#-9.56,
#-9.89,
#-9.55,
#-9.73,
#-9.23,
#-9.15,
#-9.68]

R_hier_dense_trpo = [-19.79,
-12.60,
-9.46 ,
-6.95 ,
-6.53 ,
-6.59 ,
-6.36 ,
-5.90 ,
-6.38 ,
-5.74 ,
-6.45 ,
-5.55 ,
-4.92 ,
-4.45 ,
-3.95 ,
-3.85 ,
-3.88 ,
-3.81 ,
-4.05 ,
-3.89 ,
-3.99 ,
-3.26 ,
-3.69 ,
-3.30 ,
-3.45 ,
-3.73 ,
-3.63 ,
-3.78 ,
-3.66 ,
-4.38 ,
-3.44 ,
-3.62 ,
-3.64 ,
-3.86 ,
-4.24 ,
-3.93 ,
-4.46 ,
-3.83 ,
-4.03 ,
-4.25 ,
-3.86 ,
-3.82 ,
-4.62 ,
-4.03 ,
-4.76 ,
-4.06 ,
-4.37 ,
-3.94 ,
-4.53 ,
-4.34]

np.save('R_hier_dense_trpo.npy',R_hier_dense_trpo)


R_hier_sparse_a2c = [-40.95,
-41.65,
-38.90,
-37.84,
-35.08,
-33.84,
-34.98,
-34.13,
-36.04,
-30.94,
-33.05,
-27.47,
-24.91,
-32.54,
-31.54,
-23.36,
-22.20,
-29.86,
-26.98,
-25.96,
-27.50,
-22.94,
-22.39,
-25.00,
-22.31,
-21.13,
-21.99,
-22.21,
-21.81,
-18.81,
-20.87,
-19.76,
-17.34,
-18.60,
-19.37,
-18.97,
-18.84,
-15.37,
-17.45,
-21.86,
-15.93,
-17.71,
-20.40,
-18.81,
-17.27,
-18.48,
-22.20,
-19.12,
-19.56,
-21.81]

R_hier_dense_a2c = [-19.79,
-17.97,
-18.13,
-17.55,
-18.09,
-17.84,
-17.16,
-14.43,
-12.36,
-12.29,
-12.31,
-11.83,
-13.60,
-10.98,
-12.10,
-13.33,
-12.49,
-12.09,
-14.16,
-10.08,
-12.35,
-12.05,
-12.71,
-13.19,
-12.46,
-11.96,
-12.32,
-13.25,
-11.73,
-12.04,
-11.91,
-10.93,
-10.67,
-10.41,
-11.07,
-9.65,
-9.95,
-7.81,
-7.26,
-8.21,
-8.18,
-6.24,
-7.46,
-8.04,
-7.18,
-7.43,
-8.08,
-6.22,
-6.86,
-5.85]

R_flat_sparse_trpo = [-48.38,
-48.66,
-47.33,
-46.56,
-46.02,
-46.50,
-46.57,
-47.73,
-46.60,
-46.84,
-46.75,
-47.18,
-48.06,
-47.08,
-47.79,
-46.80,
-47.67,
-47.38,
-46.62,
-46.97,
-48.12,
-48.03,
-46.93,
-47.13,
-47.20,
-47.48,
-46.77,
-47.56,
-46.48,
-47.68,
-46.68,
-46.55,
-44.71,
-47.05,
-47.03,
-47.49,
-47.12,
-47.49,
-47.52,
-48.62,
-46.79,
-46.80,
-48.14,
-47.64,
-47.72,
-47.85,
-47.48,
-47.42,
-48.21,
-46.72]





#Rh = np.interp(np.arange(500), np.linspace(0,500,50), R_hier_sparse_trpo)
#Rf = np.interp(np.arange(500), np.linspace(0,500,50), R_flat_sparse_trpo)
#dfh = pd.DataFrame(Rh)
#Rh = dfh.rolling(100).mean()
#dff = pd.DataFrame(Rf)
#Rf = dff.rolling(100).mean()

#plt.figure(1,dpi=200)
#plt.xlabel('Episodes (Rolling Window over 100)')
#plt.ylabel('Reward')
#plt.title('Fetch Reach: Policy Gradient')
#plt.plot(Rf)
#plt.plot(Rh)
#plt.legend(('Policy Grad','H-Policy-Grad'))
#plt.show()




Msteps_reacher_trpo_sparse = np.array([127.00,	
180.00,
245.00,
369.00,
425.00,
599.00,
765.00,
1126.00,
1356.00,
1631.00,
1784.00,
2345.00,
2784.00,
2677.00,
2871.00,
2976.00,
2713.00,
2971.00,
2959.00,
3104.00,
2985.00,
2655.00,
2912.00,
2703.00,
2352.00,
1920.00,
2300.00,
2550.00,
2559.00,
2119.00,
2423.00,
2728.00,
3027.00,
2796.00,
2943.00,
2999.00,
2782.00,
2863.00,
2566.00,
2646.00,
2785.00,
2692.00,
2786.00,
2332.00,
2540.00,
2393.00,
2503.00,
2401.00,
2235.00,
1815.00])/100	

Msteps_reacher_trpo_dense = [165.00,	
193.00,
218.00,
238.00,
270.00,
242.00,
248.00,
230.00,
272.00,
275.00,
270.00,
269.00,
228.00,
281.00,
281.00,
254.00,
239.00,
364.00,
263.00,
308.00,
314.00,
324.00,
454.00,
406.00,
452.00,
347.00,
484.00,
609.00,
554.00,
513.00,
777.00,
953.00,
922.00,
801.00,
1059.00,
1072.00,
1078.00,
862.00,
905.00,
1031.00,
1019.00,
1021.00,
820.00,
682.00,
580.00,
487.00,
467.00,
583.00,
425.00,
589.00]	

#Msteps_reacher_trpo_dense = np.array([106.00,
#131.00,
#116.00,
#114.00,
#124.00,
#111.00,
#123.00,
#121.00,
#128.00,
#119.00,
#126.00,
#133.00,
#129.00,
#127.00,
#125.00,
#127.00,
#119.00,
#135.00,
#126.00,
#133.00,
#129.00,
#134.00,
#138.00,
#131.00,
#134.00,
#126.00,
#138.00,
#128.00,
#117.00,
#119.00,
#117.00,
#117.00,
#123.00,
#111.00,
#109.00,
#109.00,
#111.00,
#109.00,
#115.00,
#109.00,
#120.00,
#115.00,
#112.00,
#118.00,
#123.00,
#117.00,
#117.00,
#121.00,
#125.00,
#117.00])/100


Msteps_fetchreach_trpo_dense = np.array([146.00,  
140.00,
162.00,
154.00,
190.00,
215.00,
328.00,
424.00,
588.00,
749.00,
858.00,
1132.00,
1244.00,
1149.00,
1477.00,
1554.00,
1828.00,
1839.00,
1800.00,
1837.00,
1909.00,
1996.00,
1856.00,
1934.00,
1925.00,
1767.00,
1797.00,
1918.00,
2007.00,
1926.00,
1788.00,
1830.00,
1805.00,
1773.00,
1741.00,
1964.00,
1764.00,
1912.00,
1885.00,
1815.00,
1872.00,
1865.00,
1822.00,
1944.00,
1812.00,
2096.00,
1896.00,
1855.00,
1825.00,
1966.00])/100 









sh = np.interp(np.arange(500), np.linspace(0,500,50), Msteps_reacher_trpo_sparse)
dfh = pd.DataFrame(sh)
sh = dfh.rolling(200).mean()
plt.figure(1,dpi=200)
plt.xlabel('Episodes (Rolling Window over 100)')
plt.ylabel('Subgoals Reached Per Episode')
plt.title('Reacher Subgoals: Sparse Rewards')
plt.plot(sh)
plt.show()
